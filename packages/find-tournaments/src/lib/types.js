"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.schema = void 0;
const zod_1 = require("zod");
exports.schema = zod_1.z.object({
    command: zod_1.z.string(),
    results: zod_1.z.object({
        list: zod_1.z.array(zod_1.z.object({
            tournoi: zod_1.z.object({
                millesime: zod_1.z.number(),
                libelle: zod_1.z.string(),
                publicationProg: zod_1.z.boolean(),
                tmc: zod_1.z.boolean(),
                tarifAdulteChampionnat: zod_1.z.number(),
                type: zod_1.z.string(),
                ageReel: zod_1.z.boolean(),
                naturesTerrains: zod_1.z.array(zod_1.z.object({
                    code: zod_1.z.string(),
                    libelle: zod_1.z.string(),
                    valide: zod_1.z.boolean(),
                    categorieJeu: zod_1.z.object({
                        code: zod_1.z.string(),
                        libelle: zod_1.z.string(),
                        valide: zod_1.z.boolean(),
                    }),
                })),
                id: zod_1.z.number(),
                idsArbitres: zod_1.z.array(zod_1.z.unknown()),
                tarifJeuneChampionnat: zod_1.z.number(),
                international: zod_1.z.boolean(),
                inscriptionEnLigne: zod_1.z.boolean(),
                categorieTournoi: zod_1.z.object({
                    code: zod_1.z.string(),
                    codeTaxe: zod_1.z.string(),
                    libelle: zod_1.z.string(),
                    niveauHierarchique: zod_1.z.string(),
                    valide: zod_1.z.boolean(),
                }),
                prixLot: zod_1.z.number(),
                paiementEnLigne: zod_1.z.boolean(),
                reductionAdherentJeune: zod_1.z.number(),
                reductionAdherentAdulte: zod_1.z.number(),
                paiementEnLigneObligatoire: zod_1.z.boolean(),
                villeEngagement: zod_1.z.string().optional(),
                senior: zod_1.z.boolean(),
                veteran: zod_1.z.boolean(),
                inscriptionEnLigneEnCours: zod_1.z.boolean(),
                avecResultatPublie: zod_1.z.boolean(),
                dateOuvertureInscriptionEnLigne: zod_1.z.string().optional(),
                code: zod_1.z.string(),
                categorieAge: zod_1.z.object({
                    ageJoueurMin: zod_1.z.number(),
                    ageMin: zod_1.z.number(),
                    ageJoueurMax: zod_1.z.number(),
                    ageRechercheMax: zod_1.z.number(),
                    categoriesAgeTypePratique: zod_1.z.array(zod_1.z.object({
                        createTime: zod_1.z.string(),
                        id: zod_1.z.object({
                            typePratique: zod_1.z.string(),
                            idCategorieAge: zod_1.z.number(),
                        }),
                    })),
                    ageMax: zod_1.z.number(),
                    libelle: zod_1.z.string(),
                    id: zod_1.z.number(),
                    valide: zod_1.z.boolean(),
                    ageReel: zod_1.z.boolean(),
                    ageRechercheMin: zod_1.z.number(),
                    homologable: zod_1.z.boolean(),
                }),
                codeComite: zod_1.z.string(),
                installations: zod_1.z.array(zod_1.z.object({
                    ville: zod_1.z.string(),
                    lng: zod_1.z.number().optional(),
                    surfaces: zod_1.z.array(zod_1.z.object({
                        code: zod_1.z.string(),
                        libelle: zod_1.z.string(),
                        eclaire: zod_1.z.boolean(),
                        nombre: zod_1.z.number(),
                    })),
                    vestiaires: zod_1.z.boolean(),
                    codePostal: zod_1.z.string(),
                    adresse1: zod_1.z.string().optional(),
                    nom: zod_1.z.string().nullable(),
                    adresse2: zod_1.z.string().optional(),
                    lat: zod_1.z.number().optional(),
                    clubHouse: zod_1.z.boolean(),
                })),
                reductionEpreuveSupplementaireJeune: zod_1.z.number(),
                reductionEpreuveSupplementaireAdulte: zod_1.z.number(),
                publicationResultat: zod_1.z.boolean(),
                nomComite: zod_1.z.string(),
                naturesEpreuves: zod_1.z.array(zod_1.z.object({
                    code: zod_1.z.string(),
                    libelle: zod_1.z.string(),
                    sexe: zod_1.z.string(),
                    valide: zod_1.z.boolean(),
                })),
                jeune: zod_1.z.boolean(),
                courrielEngagement: zod_1.z.string().optional(),
                nomClub: zod_1.z.string(),
                installation: zod_1.z.object({
                    ville: zod_1.z.string(),
                    lng: zod_1.z.number().optional(),
                    surfaces: zod_1.z.array(zod_1.z.unknown()),
                    vestiaires: zod_1.z.boolean(),
                    codePostal: zod_1.z.string(),
                    adresse1: zod_1.z.string().optional(),
                    nom: zod_1.z.string().nullable(),
                    adresse2: zod_1.z.string().optional(),
                    lat: zod_1.z.number().optional(),
                    clubHouse: zod_1.z.boolean(),
                }),
                categorieAgeMax: zod_1.z.object({
                    ageJoueurMin: zod_1.z.number(),
                    ageMin: zod_1.z.number(),
                    ageJoueurMax: zod_1.z.number(),
                    ageRechercheMax: zod_1.z.number(),
                    categoriesAgeTypePratique: zod_1.z.array(zod_1.z.object({
                        createTime: zod_1.z.string(),
                        id: zod_1.z.object({
                            typePratique: zod_1.z.string(),
                            idCategorieAge: zod_1.z.number(),
                        }),
                    })),
                    ageMax: zod_1.z.number(),
                    libelle: zod_1.z.string(),
                    id: zod_1.z.number(),
                    valide: zod_1.z.boolean(),
                    ageReel: zod_1.z.boolean(),
                    ageRechercheMin: zod_1.z.number(),
                    homologable: zod_1.z.boolean(),
                }),
                tournoiInterne: zod_1.z.boolean(),
                nomLigue: zod_1.z.string(),
                distanceEnMetres: zod_1.z.string(),
                familleTournoi: zod_1.z.array(zod_1.z.unknown()),
                nomEngagement: zod_1.z.string().optional(),
                codeLigue: zod_1.z.string(),
                modeleDeBalle: zod_1.z
                    .object({
                    libelle: zod_1.z.string(),
                    marqueDeBalle: zod_1.z.object({
                        id: zod_1.z.number(),
                        valide: zod_1.z.boolean(),
                        marque: zod_1.z.string(),
                    }),
                    id: zod_1.z.number(),
                    valide: zod_1.z.boolean(),
                    homologue: zod_1.z.boolean(),
                })
                    .optional(),
                jugeArbitre: zod_1.z.object({
                    idCrm: zod_1.z.number(),
                    id: zod_1.z.number().nullable(),
                    nom: zod_1.z.string().nullable(),
                    prenom: zod_1.z.string().nullable(),
                }),
                epreuves: zod_1.z.array(zod_1.z.union([
                    zod_1.z.object({
                        inscriptionEnLigneEnCours: zod_1.z.boolean(),
                        categorieAge: zod_1.z.object({
                            ageJoueurMin: zod_1.z.number(),
                            ageMin: zod_1.z.number(),
                            ageJoueurMax: zod_1.z.number(),
                            ageRechercheMax: zod_1.z.number(),
                            categoriesAgeTypePratique: zod_1.z.array(zod_1.z.object({
                                createTime: zod_1.z.string(),
                                id: zod_1.z.object({
                                    typePratique: zod_1.z.string(),
                                    idCategorieAge: zod_1.z.number(),
                                }),
                            })),
                            ageMax: zod_1.z.number(),
                            libelle: zod_1.z.string(),
                            id: zod_1.z.number(),
                            valide: zod_1.z.boolean(),
                            ageReel: zod_1.z.boolean(),
                            ageRechercheMin: zod_1.z.number(),
                            homologable: zod_1.z.boolean(),
                        }),
                        classementHaut: zod_1.z.object({
                            nature: zod_1.z.string(),
                            libelle: zod_1.z.string(),
                            serie: zod_1.z.object({
                                code: zod_1.z.string(),
                                libelle: zod_1.z.string(),
                                valide: zod_1.z.boolean(),
                            }),
                            sexe: zod_1.z.string(),
                            id: zod_1.z.number(),
                            valide: zod_1.z.boolean(),
                            poidsDouble: zod_1.z.number(),
                            echelon: zod_1.z.number(),
                        }),
                        nombreDecoupagesPublies: zod_1.z.number(),
                        libelle: zod_1.z.string(),
                        participationAgeReel: zod_1.z.boolean(),
                        decoupages: zod_1.z
                            .array(zod_1.z.union([
                            zod_1.z.object({
                                classementBas: zod_1.z.object({
                                    nature: zod_1.z.string(),
                                    libelle: zod_1.z.string(),
                                    serie: zod_1.z.object({
                                        code: zod_1.z.string(),
                                        libelle: zod_1.z.string(),
                                        valide: zod_1.z.boolean(),
                                    }),
                                    sexe: zod_1.z.string(),
                                    id: zod_1.z.number(),
                                    valide: zod_1.z.boolean(),
                                    poidsDouble: zod_1.z.number(),
                                    echelon: zod_1.z.number(),
                                }),
                                rangProgression: zod_1.z.number(),
                                classementHaut: zod_1.z.object({
                                    nature: zod_1.z.string(),
                                    libelle: zod_1.z.string(),
                                    serie: zod_1.z.object({
                                        code: zod_1.z.string(),
                                        libelle: zod_1.z.string(),
                                        valide: zod_1.z.boolean(),
                                    }),
                                    sexe: zod_1.z.string(),
                                    id: zod_1.z.number(),
                                    valide: zod_1.z.boolean(),
                                    poidsDouble: zod_1.z.number(),
                                    echelon: zod_1.z.number(),
                                }),
                                libelle: zod_1.z.string(),
                                id: zod_1.z.number(),
                                type: zod_1.z.string(),
                                statut: zod_1.z.object({
                                    libelle: zod_1.z.string(),
                                    id: zod_1.z.number(),
                                }),
                                publicationResultat: zod_1.z.boolean(),
                            }),
                            zod_1.z.object({
                                classementBas: zod_1.z.object({
                                    nature: zod_1.z.string(),
                                    libelle: zod_1.z.string(),
                                    serie: zod_1.z.object({
                                        code: zod_1.z.string(),
                                        libelle: zod_1.z.string(),
                                        valide: zod_1.z.boolean(),
                                    }),
                                    sexe: zod_1.z.string(),
                                    id: zod_1.z.number(),
                                    valide: zod_1.z.boolean(),
                                    poidsDouble: zod_1.z.number(),
                                    echelon: zod_1.z.number(),
                                }),
                                rangProgression: zod_1.z.number(),
                                classementHaut: zod_1.z.object({
                                    nature: zod_1.z.string(),
                                    libelle: zod_1.z.string(),
                                    serie: zod_1.z.object({
                                        code: zod_1.z.string(),
                                        libelle: zod_1.z.string(),
                                        valide: zod_1.z.boolean(),
                                    }),
                                    sexe: zod_1.z.string(),
                                    id: zod_1.z.number(),
                                    valide: zod_1.z.boolean(),
                                    poidsDouble: zod_1.z.number(),
                                    echelon: zod_1.z.number(),
                                }),
                                libelle: zod_1.z.string(),
                                id: zod_1.z.number(),
                                type: zod_1.z.string(),
                                publicationResultat: zod_1.z.boolean(),
                            }),
                        ]))
                            .optional(),
                        clotureInscriptionSansPreavis: zod_1.z.boolean(),
                        type: zod_1.z.string(),
                        publicationResultat: zod_1.z.boolean(),
                        tarifJeune: zod_1.z.number(),
                        categorieAgeMax: zod_1.z.object({
                            ageJoueurMin: zod_1.z.number(),
                            ageMin: zod_1.z.number(),
                            ageJoueurMax: zod_1.z.number(),
                            ageRechercheMax: zod_1.z.number(),
                            categoriesAgeTypePratique: zod_1.z.array(zod_1.z.object({
                                createTime: zod_1.z.string(),
                                id: zod_1.z.object({
                                    typePratique: zod_1.z.string(),
                                    idCategorieAge: zod_1.z.number(),
                                }),
                            })),
                            ageMax: zod_1.z.number(),
                            libelle: zod_1.z.string(),
                            id: zod_1.z.number(),
                            valide: zod_1.z.boolean(),
                            ageReel: zod_1.z.boolean(),
                            ageRechercheMin: zod_1.z.number(),
                            homologable: zod_1.z.boolean(),
                        }),
                        id: zod_1.z.number(),
                        natureEpreuve: zod_1.z.object({
                            code: zod_1.z.string(),
                            libelle: zod_1.z.string(),
                            sexe: zod_1.z.string(),
                            valide: zod_1.z.boolean(),
                        }),
                        inscriptionEnLigne: zod_1.z.boolean(),
                        fillesAutorisees: zod_1.z.boolean(),
                        formatMatch: zod_1.z.object({
                            code: zod_1.z.string(),
                            classementMax: zod_1.z.object({
                                nature: zod_1.z.string(),
                                libelle: zod_1.z.string(),
                                serie: zod_1.z.object({
                                    code: zod_1.z.string(),
                                    libelle: zod_1.z.string(),
                                    valide: zod_1.z.boolean(),
                                }),
                                sexe: zod_1.z.string(),
                                id: zod_1.z.number(),
                                valide: zod_1.z.boolean(),
                                poidsDouble: zod_1.z.number(),
                                echelon: zod_1.z.number(),
                            }),
                            ageMax: zod_1.z.number(),
                            nombreSets: zod_1.z.number(),
                            double: zod_1.z.boolean(),
                            libelle: zod_1.z.string(),
                            simple: zod_1.z.boolean(),
                            valide: zod_1.z.boolean(),
                            superJeuDecisif: zod_1.z.boolean(),
                            ageMin: zod_1.z.number(),
                            coefficient: zod_1.z.number(),
                            duree: zod_1.z.number(),
                            classementMin: zod_1.z.object({
                                nature: zod_1.z.string(),
                                libelle: zod_1.z.string(),
                                serie: zod_1.z.object({
                                    code: zod_1.z.string(),
                                    libelle: zod_1.z.string(),
                                    valide: zod_1.z.boolean(),
                                }),
                                sexe: zod_1.z.string(),
                                id: zod_1.z.number(),
                                valide: zod_1.z.boolean(),
                                poidsDouble: zod_1.z.number(),
                                echelon: zod_1.z.number(),
                            }),
                            millesimeDebutValidite: zod_1.z.number(),
                        }),
                        tarifAdulte: zod_1.z.number(),
                        dateProgrammation: zod_1.z.string().optional(),
                        classementBas: zod_1.z.object({
                            nature: zod_1.z.string(),
                            libelle: zod_1.z.string(),
                            serie: zod_1.z.object({
                                code: zod_1.z.string(),
                                libelle: zod_1.z.string(),
                                valide: zod_1.z.boolean(),
                            }),
                            sexe: zod_1.z.string(),
                            id: zod_1.z.number(),
                            valide: zod_1.z.boolean(),
                            poidsDouble: zod_1.z.number(),
                            echelon: zod_1.z.number(),
                        }),
                        tarifsSpecifiques: zod_1.z.array(zod_1.z.unknown()),
                        homologuee: zod_1.z.boolean(),
                        dateDebut: zod_1.z.string(),
                        dateFin: zod_1.z.string(),
                        borneAnneesNaissance: zod_1.z.object({
                            min: zod_1.z.number(),
                            max: zod_1.z.number(),
                        }),
                        open: zod_1.z.boolean(),
                        statut: zod_1.z.object({ libelle: zod_1.z.string(), id: zod_1.z.number() }),
                    }),
                    zod_1.z.object({
                        inscriptionEnLigneEnCours: zod_1.z.boolean(),
                        categorieAge: zod_1.z.object({
                            ageJoueurMin: zod_1.z.number(),
                            ageMin: zod_1.z.number(),
                            ageJoueurMax: zod_1.z.number(),
                            ageRechercheMax: zod_1.z.number(),
                            categoriesAgeTypePratique: zod_1.z.array(zod_1.z.object({
                                createTime: zod_1.z.string(),
                                id: zod_1.z.object({
                                    typePratique: zod_1.z.string(),
                                    idCategorieAge: zod_1.z.number(),
                                }),
                            })),
                            ageMax: zod_1.z.number(),
                            libelle: zod_1.z.string(),
                            id: zod_1.z.number(),
                            valide: zod_1.z.boolean(),
                            ageReel: zod_1.z.boolean(),
                            ageRechercheMin: zod_1.z.number(),
                            homologable: zod_1.z.boolean(),
                        }),
                        classementHaut: zod_1.z.object({
                            nature: zod_1.z.string(),
                            libelle: zod_1.z.string(),
                            serie: zod_1.z.object({
                                code: zod_1.z.string(),
                                libelle: zod_1.z.string(),
                                valide: zod_1.z.boolean(),
                            }),
                            sexe: zod_1.z.string(),
                            id: zod_1.z.number(),
                            valide: zod_1.z.boolean(),
                            poidsDouble: zod_1.z.number(),
                            echelon: zod_1.z.number(),
                        }),
                        nombreDecoupagesPublies: zod_1.z.number(),
                        libelle: zod_1.z.string(),
                        participationAgeReel: zod_1.z.boolean(),
                        decoupages: zod_1.z
                            .array(zod_1.z.union([
                            zod_1.z.object({
                                classementBas: zod_1.z.object({
                                    nature: zod_1.z.string(),
                                    libelle: zod_1.z.string(),
                                    serie: zod_1.z.object({
                                        code: zod_1.z.string(),
                                        libelle: zod_1.z.string(),
                                        valide: zod_1.z.boolean(),
                                    }),
                                    sexe: zod_1.z.string(),
                                    id: zod_1.z.number(),
                                    valide: zod_1.z.boolean(),
                                    poidsDouble: zod_1.z.number(),
                                    echelon: zod_1.z.number(),
                                }),
                                rangProgression: zod_1.z.number(),
                                classementHaut: zod_1.z.object({
                                    nature: zod_1.z.string(),
                                    libelle: zod_1.z.string(),
                                    serie: zod_1.z.object({
                                        code: zod_1.z.string(),
                                        libelle: zod_1.z.string(),
                                        valide: zod_1.z.boolean(),
                                    }),
                                    sexe: zod_1.z.string(),
                                    id: zod_1.z.number(),
                                    valide: zod_1.z.boolean(),
                                    poidsDouble: zod_1.z.number(),
                                    echelon: zod_1.z.number(),
                                }),
                                libelle: zod_1.z.string(),
                                id: zod_1.z.number(),
                                type: zod_1.z.string(),
                                publicationResultat: zod_1.z.boolean(),
                            }),
                            zod_1.z.object({
                                classementBas: zod_1.z.object({
                                    nature: zod_1.z.string(),
                                    libelle: zod_1.z.string(),
                                    serie: zod_1.z.object({
                                        code: zod_1.z.string(),
                                        libelle: zod_1.z.string(),
                                        valide: zod_1.z.boolean(),
                                    }),
                                    sexe: zod_1.z.string(),
                                    id: zod_1.z.number(),
                                    valide: zod_1.z.boolean(),
                                    poidsDouble: zod_1.z.number(),
                                    echelon: zod_1.z.number(),
                                }),
                                rangProgression: zod_1.z.number(),
                                classementHaut: zod_1.z.object({
                                    nature: zod_1.z.string(),
                                    libelle: zod_1.z.string(),
                                    serie: zod_1.z.object({
                                        code: zod_1.z.string(),
                                        libelle: zod_1.z.string(),
                                        valide: zod_1.z.boolean(),
                                    }),
                                    sexe: zod_1.z.string(),
                                    id: zod_1.z.number(),
                                    valide: zod_1.z.boolean(),
                                    poidsDouble: zod_1.z.number(),
                                    echelon: zod_1.z.number(),
                                }),
                                libelle: zod_1.z.string(),
                                id: zod_1.z.number(),
                                type: zod_1.z.string(),
                                statut: zod_1.z.object({
                                    libelle: zod_1.z.string(),
                                    id: zod_1.z.number(),
                                }),
                                publicationResultat: zod_1.z.boolean(),
                            }),
                        ]))
                            .optional(),
                        clotureInscriptionSansPreavis: zod_1.z.boolean(),
                        type: zod_1.z.string(),
                        publicationResultat: zod_1.z.boolean(),
                        tarifJeune: zod_1.z.number(),
                        categorieAgeMax: zod_1.z.object({
                            ageJoueurMin: zod_1.z.number(),
                            ageMin: zod_1.z.number(),
                            ageJoueurMax: zod_1.z.number(),
                            ageRechercheMax: zod_1.z.number(),
                            categoriesAgeTypePratique: zod_1.z.array(zod_1.z.object({
                                createTime: zod_1.z.string(),
                                id: zod_1.z.object({
                                    typePratique: zod_1.z.string(),
                                    idCategorieAge: zod_1.z.number(),
                                }),
                            })),
                            ageMax: zod_1.z.number(),
                            libelle: zod_1.z.string(),
                            id: zod_1.z.number(),
                            valide: zod_1.z.boolean(),
                            ageReel: zod_1.z.boolean(),
                            ageRechercheMin: zod_1.z.number(),
                            homologable: zod_1.z.boolean(),
                        }),
                        id: zod_1.z.number(),
                        natureEpreuve: zod_1.z.object({
                            code: zod_1.z.string(),
                            libelle: zod_1.z.string(),
                            sexe: zod_1.z.string(),
                            valide: zod_1.z.boolean(),
                        }),
                        inscriptionEnLigne: zod_1.z.boolean(),
                        fillesAutorisees: zod_1.z.boolean(),
                        formatMatch: zod_1.z.object({
                            code: zod_1.z.string(),
                            classementMax: zod_1.z.object({
                                nature: zod_1.z.string(),
                                libelle: zod_1.z.string(),
                                serie: zod_1.z.object({
                                    code: zod_1.z.string(),
                                    libelle: zod_1.z.string(),
                                    valide: zod_1.z.boolean(),
                                }),
                                sexe: zod_1.z.string(),
                                id: zod_1.z.number(),
                                valide: zod_1.z.boolean(),
                                poidsDouble: zod_1.z.number(),
                                echelon: zod_1.z.number(),
                            }),
                            ageMax: zod_1.z.number(),
                            nombreSets: zod_1.z.number(),
                            double: zod_1.z.boolean(),
                            libelle: zod_1.z.string(),
                            simple: zod_1.z.boolean(),
                            valide: zod_1.z.boolean(),
                            superJeuDecisif: zod_1.z.boolean(),
                            ageMin: zod_1.z.number(),
                            coefficient: zod_1.z.number(),
                            duree: zod_1.z.number(),
                            classementMin: zod_1.z.object({
                                nature: zod_1.z.string(),
                                libelle: zod_1.z.string(),
                                serie: zod_1.z.object({
                                    code: zod_1.z.string(),
                                    libelle: zod_1.z.string(),
                                    valide: zod_1.z.boolean(),
                                }),
                                sexe: zod_1.z.string(),
                                id: zod_1.z.number(),
                                valide: zod_1.z.boolean(),
                                poidsDouble: zod_1.z.number(),
                                echelon: zod_1.z.number(),
                            }),
                            millesimeDebutValidite: zod_1.z.number(),
                        }),
                        tarifAdulte: zod_1.z.number(),
                        dateProgrammation: zod_1.z.string().optional(),
                        classementBas: zod_1.z.object({
                            nature: zod_1.z.string(),
                            libelle: zod_1.z.string(),
                            serie: zod_1.z.object({
                                code: zod_1.z.string(),
                                libelle: zod_1.z.string(),
                                valide: zod_1.z.boolean(),
                            }),
                            sexe: zod_1.z.string(),
                            id: zod_1.z.number(),
                            valide: zod_1.z.boolean(),
                            poidsDouble: zod_1.z.number(),
                            echelon: zod_1.z.number(),
                        }),
                        tarifsSpecifiques: zod_1.z.array(zod_1.z.unknown()),
                        homologuee: zod_1.z.boolean(),
                        dateDebut: zod_1.z.string(),
                        dateFin: zod_1.z.string(),
                        borneAnneesNaissance: zod_1.z.object({
                            min: zod_1.z.number(),
                            max: zod_1.z.number(),
                        }),
                        open: zod_1.z.boolean(),
                        statut: zod_1.z.object({ libelle: zod_1.z.string(), id: zod_1.z.number() }),
                    }),
                    zod_1.z.object({
                        inscriptionEnLigneEnCours: zod_1.z.boolean(),
                        categorieAge: zod_1.z.object({
                            ageJoueurMin: zod_1.z.number(),
                            ageMin: zod_1.z.number(),
                            ageJoueurMax: zod_1.z.number(),
                            ageRechercheMax: zod_1.z.number(),
                            categoriesAgeTypePratique: zod_1.z.array(zod_1.z.object({
                                createTime: zod_1.z.string(),
                                id: zod_1.z.object({
                                    typePratique: zod_1.z.string(),
                                    idCategorieAge: zod_1.z.number(),
                                }),
                            })),
                            ageMax: zod_1.z.number(),
                            libelle: zod_1.z.string(),
                            id: zod_1.z.number(),
                            valide: zod_1.z.boolean(),
                            ageReel: zod_1.z.boolean(),
                            ageRechercheMin: zod_1.z.number(),
                            homologable: zod_1.z.boolean(),
                        }),
                        classementHaut: zod_1.z.object({
                            nature: zod_1.z.string(),
                            libelle: zod_1.z.string(),
                            serie: zod_1.z.object({
                                code: zod_1.z.string(),
                                libelle: zod_1.z.string(),
                                valide: zod_1.z.boolean(),
                            }),
                            sexe: zod_1.z.string(),
                            id: zod_1.z.number(),
                            valide: zod_1.z.boolean(),
                            poidsDouble: zod_1.z.number(),
                            echelon: zod_1.z.number(),
                        }),
                        nombreDecoupagesPublies: zod_1.z.number(),
                        libelle: zod_1.z.string(),
                        participationAgeReel: zod_1.z.boolean(),
                        decoupages: zod_1.z
                            .array(zod_1.z.object({
                            classementBas: zod_1.z.object({
                                nature: zod_1.z.string(),
                                libelle: zod_1.z.string(),
                                serie: zod_1.z.object({
                                    code: zod_1.z.string(),
                                    libelle: zod_1.z.string(),
                                    valide: zod_1.z.boolean(),
                                }),
                                sexe: zod_1.z.string(),
                                id: zod_1.z.number(),
                                valide: zod_1.z.boolean(),
                                poidsDouble: zod_1.z.number(),
                                echelon: zod_1.z.number(),
                            }),
                            rangProgression: zod_1.z.number(),
                            classementHaut: zod_1.z.object({
                                nature: zod_1.z.string(),
                                libelle: zod_1.z.string(),
                                serie: zod_1.z.object({
                                    code: zod_1.z.string(),
                                    libelle: zod_1.z.string(),
                                    valide: zod_1.z.boolean(),
                                }),
                                sexe: zod_1.z.string(),
                                id: zod_1.z.number(),
                                valide: zod_1.z.boolean(),
                                poidsDouble: zod_1.z.number(),
                                echelon: zod_1.z.number(),
                            }),
                            libelle: zod_1.z.string(),
                            id: zod_1.z.number(),
                            type: zod_1.z.string(),
                            statut: zod_1.z.object({ libelle: zod_1.z.string(), id: zod_1.z.number() }),
                            publicationResultat: zod_1.z.boolean(),
                        }))
                            .optional(),
                        clotureInscriptionSansPreavis: zod_1.z.boolean(),
                        type: zod_1.z.string(),
                        publicationResultat: zod_1.z.boolean(),
                        tarifJeune: zod_1.z.number(),
                        categorieAgeMax: zod_1.z.object({
                            ageJoueurMin: zod_1.z.number(),
                            ageMin: zod_1.z.number(),
                            ageJoueurMax: zod_1.z.number(),
                            ageRechercheMax: zod_1.z.number(),
                            categoriesAgeTypePratique: zod_1.z.array(zod_1.z.object({
                                createTime: zod_1.z.string(),
                                id: zod_1.z.object({
                                    typePratique: zod_1.z.string(),
                                    idCategorieAge: zod_1.z.number(),
                                }),
                            })),
                            ageMax: zod_1.z.number(),
                            libelle: zod_1.z.string(),
                            id: zod_1.z.number(),
                            valide: zod_1.z.boolean(),
                            ageReel: zod_1.z.boolean(),
                            ageRechercheMin: zod_1.z.number(),
                            homologable: zod_1.z.boolean(),
                        }),
                        id: zod_1.z.number(),
                        natureEpreuve: zod_1.z.object({
                            code: zod_1.z.string(),
                            libelle: zod_1.z.string(),
                            sexe: zod_1.z.string(),
                            valide: zod_1.z.boolean(),
                        }),
                        inscriptionEnLigne: zod_1.z.boolean(),
                        fillesAutorisees: zod_1.z.boolean(),
                        formatMatch: zod_1.z.object({
                            code: zod_1.z.string(),
                            classementMax: zod_1.z.object({
                                nature: zod_1.z.string(),
                                libelle: zod_1.z.string(),
                                serie: zod_1.z.object({
                                    code: zod_1.z.string(),
                                    libelle: zod_1.z.string(),
                                    valide: zod_1.z.boolean(),
                                }),
                                sexe: zod_1.z.string(),
                                id: zod_1.z.number(),
                                valide: zod_1.z.boolean(),
                                poidsDouble: zod_1.z.number(),
                                echelon: zod_1.z.number(),
                            }),
                            ageMax: zod_1.z.number(),
                            nombreSets: zod_1.z.number(),
                            double: zod_1.z.boolean(),
                            libelle: zod_1.z.string(),
                            simple: zod_1.z.boolean(),
                            valide: zod_1.z.boolean(),
                            superJeuDecisif: zod_1.z.boolean(),
                            ageMin: zod_1.z.number(),
                            coefficient: zod_1.z.number(),
                            duree: zod_1.z.number(),
                            classementMin: zod_1.z.object({
                                nature: zod_1.z.string(),
                                libelle: zod_1.z.string(),
                                serie: zod_1.z.object({
                                    code: zod_1.z.string(),
                                    libelle: zod_1.z.string(),
                                    valide: zod_1.z.boolean(),
                                }),
                                sexe: zod_1.z.string(),
                                id: zod_1.z.number(),
                                valide: zod_1.z.boolean(),
                                poidsDouble: zod_1.z.number(),
                                echelon: zod_1.z.number(),
                            }),
                            millesimeDebutValidite: zod_1.z.number(),
                        }),
                        tarifAdulte: zod_1.z.number(),
                        dateProgrammation: zod_1.z.string().optional(),
                        classementBas: zod_1.z.object({
                            nature: zod_1.z.string(),
                            libelle: zod_1.z.string(),
                            serie: zod_1.z.object({
                                code: zod_1.z.string(),
                                libelle: zod_1.z.string(),
                                valide: zod_1.z.boolean(),
                            }),
                            sexe: zod_1.z.string(),
                            id: zod_1.z.number(),
                            valide: zod_1.z.boolean(),
                            poidsDouble: zod_1.z.number(),
                            echelon: zod_1.z.number(),
                        }),
                        tarifsSpecifiques: zod_1.z.array(zod_1.z.unknown()),
                        homologuee: zod_1.z.boolean(),
                        dateDebut: zod_1.z.string(),
                        dateFin: zod_1.z.string(),
                        borneAnneesNaissance: zod_1.z.object({
                            min: zod_1.z.number(),
                            max: zod_1.z.number(),
                        }),
                        open: zod_1.z.boolean(),
                        statut: zod_1.z.object({ libelle: zod_1.z.string(), id: zod_1.z.number() }),
                    }),
                ])),
                dateDebut: zod_1.z.object({
                    date: zod_1.z.string(),
                    timezone_type: zod_1.z.number(),
                    timezone: zod_1.z.string(),
                }),
                serie: zod_1.z.object({
                    code: zod_1.z.string(),
                    libelle: zod_1.z.string(),
                    valide: zod_1.z.boolean(),
                }),
                dateFin: zod_1.z.object({
                    date: zod_1.z.string(),
                    timezone_type: zod_1.z.number(),
                    timezone: zod_1.z.string(),
                }),
                dateValidation: zod_1.z.string(),
                codePostalEngagement: zod_1.z.string().optional(),
                codeClub: zod_1.z.string(),
                prixEspece: zod_1.z.number(),
                isTournoi: zod_1.z.boolean(),
                natureWithCatAge: zod_1.z.object({
                    SD: zod_1.z.object({ 200: zod_1.z.string() }).optional(),
                    SM: zod_1.z.object({ 200: zod_1.z.string() }).optional(),
                }),
            }),
            favoris: zod_1.z.string(),
        })),
    }),
    head: zod_1.z.string(),
    pagination: zod_1.z.null(),
    settings: zod_1.z.null(),
});
//# sourceMappingURL=types.js.map